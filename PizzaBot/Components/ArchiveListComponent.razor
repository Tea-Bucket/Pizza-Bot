@inject ArchiveService ArchiveService

@using Microsoft.AspNetCore.Components.QuickGrid

<QuickGrid Pagination="Pagination" Items="@ArchiveService.GetAllEntries().AsQueryable()">
    <PropertyColumn Property="@(e => e.date)" Format="yyyy.MM.dd" Sortable="true" InitialSortDirection="SortDirection.Descending" IsDefaultSortColumn="true" />
    @if (ShowOnlyTotalPizza)
    {
        <PropertyColumn Title="Pizzas" Property="@(e => (e.MeatPizzas + e.VeggiePizzas + e.VeganPizzas))" Sortable="true" />
    } else{
        <PropertyColumn Title="🍖" Property="@(e => e.MeatPizzas)" Sortable="false" />
        <PropertyColumn Title="🍄🧀" Property="@(e => e.VeggiePizzas)" Sortable="false" />
        <PropertyColumn Title="🌽" Property="@(e => e.VeganPizzas)" Sortable="false" />
        <PropertyColumn Title="🧑" Property="@(e => e.AnonymizedOrders.Count)" Sortable="false" />
    }
    <PropertyColumn Title="🍾" Property="@(e => e.Bottles)" Sortable="false" />
    <PropertyColumn Title="€" Property="@(e=>e.TotalCost)" />
    <TemplateColumn Title="🔧" Sortable="false">
        <a href="/admin@(SecretPath)/archive/@(context.id)"><button class="btn btn-info" style="width: 2em; height: 2em; padding: 0; text-align:center;">🔧</button></a>
    </TemplateColumn>
</QuickGrid>
<Paginator State="@Pagination" />

<style>
    ::deep thead {width: 20px;}
</style>

@code {
    [Parameter]
    public int Number { get; set; }

    [Parameter]
    public bool ShowOnlyTotalPizza { get; set; }

    [Parameter]
    public string SecretPath { get; set; }

    PaginationState Pagination;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Pagination = new PaginationState { ItemsPerPage = Number };

        EventHandler Reload = async (sender, eventArgs) =>
        {
            await InvokeAsync(StateHasChanged);
        };
        ArchiveService.OnArchiveChange += Reload;
    }
}
